{"version":3,"file":"mod.js","sources":["../node_modules/@stdlib/math-base-assert-is-nan/lib/main.js","../lib/entropy.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a double-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnan( NaN );\n* // returns true\n*\n* @example\n* var bool = isnan( 7.0 );\n* // returns false\n*/\nfunction isnan( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isnan;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\n\n\n// MAIN //\n\n/**\n* Returns the entropy of a degenerate distribution.\n*\n* @param {number} mu - constant value of distribution\n* @returns {NonNegativeNumber} entropy\n*\n* @example\n* var v = entropy( 0.1 );\n* // returns 0.0\n*\n* @example\n* var v = entropy( 0.5 );\n* // returns 0.0\n*\n* @example\n* var v = entropy( 10.0 );\n* // returns 0.0\n*\n* @example\n* var v = entropy( NaN );\n* // returns NaN\n*/\nfunction entropy( mu ) {\n\tif ( isnan( mu ) ) {\n\t\treturn NaN;\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = entropy;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Degenerate distribution entropy.\n*\n* @module @stdlib/stats-base-dists-degenerate-entropy\n*\n* @example\n* var entropy = require( '@stdlib/stats-base-dists-degenerate-entropy' );\n*\n* var v = entropy( 10.0 );\n* // returns 0.0\n*\n* v = entropy( -5.0 );\n* // returns 0.0\n*/\n\n// MODULES //\n\nvar entropy = require( './entropy.js' );\n\n\n// EXPORTS //\n\nmodule.exports = entropy;\n"],"names":["isnan","x","lib","mu","NaN"],"mappings":";;AA2CA,ICrBIA,EDcJ,SAAgBC,GACf,OAASA,GAAMA,GCsBhB,ICjBAC,EDOA,SAAkBC,GACjB,OAAKH,EAAOG,GACJC,IAED"}